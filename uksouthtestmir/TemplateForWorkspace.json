{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "uksouthtestmir"
		},
		"uksouthtestmir-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'uksouthtestmir-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:uksouthtestmir.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"uksouthtestmir-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://uksouthtestmir.dfs.core.windows.net"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://SPexternaltable.vault.azure.net/"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/uksouthtestmir-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('uksouthtestmir-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/uksouthtestmir-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('uksouthtestmir-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Notebook 1')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "testpool",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "f9027605-4f1b-4fc4-bf94-4f8814ffdada"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1"
					},
					"enableDebugMode": false,
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/b3be1524-44b3-4038-a3a4-2a181b1a28f7/resourceGroups/synapse_test/providers/Microsoft.Synapse/workspaces/uksouthtestmir/bigDataPools/testpool",
						"name": "testpool",
						"type": "Spark",
						"endpoint": "https://uksouthtestmir.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/testpool",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net",
							"authHeader": null
						},
						"sparkVersion": "3.3",
						"nodeCount": 10,
						"cores": 4,
						"memory": 28,
						"extraHeader": null
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"import matplotlib.pyplot as plt\r\n",
							"import numpy as np\r\n",
							"\r\n",
							"fig = plt.figure()\r\n",
							"ax = fig.add_subplot(111, projection = '3d')\r\n",
							"\r\n",
							"x = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\r\n",
							"y = np.random.randint(10, size=10)\r\n",
							"z = np.zeros(10)\r\n",
							"\r\n",
							"dx = np.ones(10)\r\n",
							"dy = np.ones(10)\r\n",
							"dz = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\r\n",
							"\r\n",
							"ax.bar3d(x, y, z, dx, dy, dz, color='g')\r\n",
							"\r\n",
							"ax.set_xlabel('x axis')\r\n",
							"ax.set_ylabel('y axis')\r\n",
							"ax.set_zlabel('z axis')\r\n",
							"plt.title(\"3D Bar Chart Example\")\r\n",
							"plt.tight_layout()\r\n",
							"plt.show()"
						],
						"outputs": []
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"import matplotlib.pyplot as plt\r\n",
							"import numpy as np\r\n",
							"\r\n",
							"# Make a 10 x 10 heatmap of some random data\r\n",
							"side_length = 10\r\n",
							"# Start with a 10 x 10 matrix with values randomized around 5\r\n",
							"data = 5 + np.random.randn(side_length, side_length)\r\n",
							"# The next two lines make the values larger as we get closer to (9, 9)\r\n",
							"data += np.arange(side_length)\r\n",
							"data += np.reshape(np.arange(side_length), (side_length, 1))\r\n",
							"# Generate the heatmap\r\n",
							"fig = plt.figure()\r\n",
							"ax = fig.add_subplot(111)\r\n",
							"sns.heatmap(data, ax=ax)\r\n",
							"plt.show()"
						],
						"outputs": []
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"from delta.tables import * \r\n",
							"from pyspark.sql.functions import * \r\n",
							"\r\n",
							"delta_table_path = \"Your delta table path\" #fill in your delta table path \r\n",
							"delta_table = DeltaTable.forPath(spark, delta_table_path) \r\n",
							"\r\n",
							"# Update every even value by adding 100 to it \r\n",
							"delta_table.update( \r\n",
							"  condition = expr(\"id % 2 == 0\"), \r\n",
							"  set = { \"id\": expr(\"id + 100\") }) \r\n",
							"delta_table.toDF().show() \r\n",
							"\r\n",
							"# Delete every even value \r\n",
							"delta_table.delete(\"id % 2 == 0\") \r\n",
							"delta_table.toDF().show() \r\n",
							"\r\n",
							"# Upsert (merge) new data \r\n",
							"new_data = spark.range(0,20).alias(\"newData\") \r\n",
							"\r\n",
							"delta_table.alias(\"oldData\") \r\n",
							"    .merge(new_data.alias(\"newData\"), \"oldData.id = newData.id\") \r\n",
							"    .whenMatchedUpdate(set = { \"id\": lit(\"-1\")}) \r\n",
							"    .whenNotMatchedInsert(values = { \"id\": col(\"newData.id\") }) \r\n",
							"    .execute() \r\n",
							"\r\n",
							"delta_table.toDF().show(100)"
						],
						"outputs": []
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							""
						],
						"outputs": []
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Notebook 2')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "spark34testpool",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "56g",
					"driverCores": 8,
					"executorMemory": "56g",
					"executorCores": 8,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "c1a1e1e3-6e25-4164-8778-ab3357c65482"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1"
					},
					"enableDebugMode": false,
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/b3be1524-44b3-4038-a3a4-2a181b1a28f7/resourceGroups/synapse_test/providers/Microsoft.Synapse/workspaces/uksouthtestmir/bigDataPools/spark34testpool",
						"name": "spark34testpool",
						"type": "Spark",
						"endpoint": "https://uksouthtestmir.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/spark34testpool",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net",
							"authHeader": null
						},
						"sparkVersion": "3.4",
						"nodeCount": 10,
						"cores": 8,
						"memory": 56,
						"extraHeader": null
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"%run Test {}"
						],
						"outputs": [],
						"execution_count": 3
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Notebook 3')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "spark34testpool",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "56g",
					"driverCores": 8,
					"executorMemory": "56g",
					"executorCores": 8,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "c44b4d1d-a640-49aa-95f9-887a3f7eae13"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/b3be1524-44b3-4038-a3a4-2a181b1a28f7/resourceGroups/synapse_test/providers/Microsoft.Synapse/workspaces/uksouthtestmir/bigDataPools/spark34testpool",
						"name": "spark34testpool",
						"type": "Spark",
						"endpoint": "https://uksouthtestmir.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/spark34testpool",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.4",
						"nodeCount": 10,
						"cores": 8,
						"memory": 56
					},
					"sessionKeepAliveTimeout": 30,
					"targetSparkConfiguration": "sparkConfiguration2"
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"print(spark.conf.get(\"spark.log.level\"))"
						],
						"outputs": [],
						"execution_count": 1
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Test')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "spark34testpool",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "56g",
					"driverCores": 8,
					"executorMemory": "56g",
					"executorCores": 8,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "d8bede21-d9d4-49f9-81b9-bc86c6ae772f"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1"
					},
					"enableDebugMode": false,
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/b3be1524-44b3-4038-a3a4-2a181b1a28f7/resourceGroups/synapse_test/providers/Microsoft.Synapse/workspaces/uksouthtestmir/bigDataPools/spark34testpool",
						"name": "spark34testpool",
						"type": "Spark",
						"endpoint": "https://uksouthtestmir.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/spark34testpool",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net",
							"authHeader": null
						},
						"sparkVersion": "3.4",
						"nodeCount": 10,
						"cores": 8,
						"memory": 56,
						"extraHeader": null
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"print(\"hi\")"
						],
						"outputs": [],
						"execution_count": 1
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sparkConfiguration1testafter')]",
			"type": "Microsoft.Synapse/workspaces/sparkConfigurations",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"configs": {
					"spark.acls.enable": "false"
				},
				"created": "2024-05-29T17:14:17.4840000+03:00",
				"createdBy": "malotiabe@microsoft.com",
				"annotations": [],
				"configMergeRule": {
					"artifact.currentOperation.spark.acls.enable": "replace"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/testpool')]",
			"type": "Microsoft.Synapse/workspaces/bigDataPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"autoPause": {
					"enabled": true,
					"delayInMinutes": 15
				},
				"autoScale": {
					"enabled": true,
					"maxNodeCount": 10,
					"minNodeCount": 3
				},
				"nodeCount": 10,
				"nodeSize": "Small",
				"nodeSizeFamily": "MemoryOptimized",
				"sparkVersion": "3.3",
				"isComputeIsolationEnabled": false,
				"sessionLevelPackagesEnabled": false,
				"customLibraries": [
					{
						"name": "spark-nlp_2.12-5.2.2.jar",
						"path": "uksouthtestmir/libraries/spark-nlp_2.12-5.2.2.jar",
						"containerName": "prep",
						"uploadedTimestamp": "0001-01-01T00:00:00+00:00",
						"type": "jar"
					},
					{
						"name": "spark_nlp-5.2.2-py2.py3-none-any.whl",
						"path": "uksouthtestmir/libraries/spark_nlp-5.2.2-py2.py3-none-any.whl",
						"containerName": "prep",
						"uploadedTimestamp": "0001-01-01T00:00:00+00:00",
						"type": "whl"
					}
				],
				"annotations": []
			},
			"dependsOn": [],
			"location": "uksouth"
		},
		{
			"name": "[concat(parameters('workspaceName'), '/spark34testpool')]",
			"type": "Microsoft.Synapse/workspaces/bigDataPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"autoPause": {
					"enabled": true,
					"delayInMinutes": 15
				},
				"autoScale": {
					"enabled": true,
					"maxNodeCount": 10,
					"minNodeCount": 3
				},
				"nodeCount": 10,
				"nodeSize": "Medium",
				"nodeSizeFamily": "MemoryOptimized",
				"sparkVersion": "3.4",
				"isComputeIsolationEnabled": false,
				"sparkConfigProperties": {
					"configurationType": "Artifact",
					"filename": "sparkConfiguration1",
					"content": "{\"name\":\"sparkConfiguration1\",\"properties\":{\"configs\":{\"spark.log.level\":\"TRACE\"},\"annotations\":[],\"type\":\"Microsoft.Synapse/workspaces/sparkconfigurations\",\"description\":\"\",\"notes\":\"\",\"created\":\"2024-05-27T12:06:23.8920000+03:00\",\"createdBy\":\"malotiabe@microsoft.com\",\"configMergeRule\":{\"admin.currentOperation.spark.log.level\":\"replace\"}}}",
					"time": "2024-05-27T12:33:36.1802398Z"
				},
				"sessionLevelPackagesEnabled": false,
				"annotations": []
			},
			"dependsOn": [],
			"location": "uksouth"
		},
		{
			"name": "[concat(parameters('workspaceName'), '/test32')]",
			"type": "Microsoft.Synapse/workspaces/bigDataPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"autoPause": {
					"enabled": true,
					"delayInMinutes": 15
				},
				"autoScale": {
					"enabled": true,
					"maxNodeCount": 10,
					"minNodeCount": 3
				},
				"nodeCount": 10,
				"nodeSize": "Medium",
				"nodeSizeFamily": "MemoryOptimized",
				"sparkVersion": "3.2",
				"isComputeIsolationEnabled": false,
				"sessionLevelPackagesEnabled": false,
				"annotations": []
			},
			"dependsOn": [],
			"location": "uksouth"
		},
		{
			"name": "[concat(parameters('workspaceName'), '/testpool')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"annotations": []
			},
			"dependsOn": [],
			"location": "uksouth"
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureKeyVault1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		}
	]
}